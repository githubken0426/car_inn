<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="inn.shopping.api.dao.CommentMapper">
	<resultMap id="BaseResultMap" type="inn.shopping.api.entity.CommentAttr">
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="total_count" property="totalCount" jdbcType="INTEGER" />
		<result column="good_count" property="goodCount" jdbcType="INTEGER" />
		<result column="good_percent" property="goodPercent" jdbcType="VARCHAR" />
		<result column="middle_count" property="middleCount" jdbcType="INTEGER" />
		<result column="bad_count" property="badCount" jdbcType="INTEGER" />
		<result column="picture_count" property="pictureCount" jdbcType="INTEGER" />
		<result column="append_count" property="appendCount" jdbcType="INTEGER" />
		<result column="reply_count" property="replyCount" jdbcType="INTEGER" />
		<!-- <collection property="tagList" column="tag_ids" javaType="ArrayList" 
			ofType="inn.shopping.api.entity.CommentTag" select="selectCommentTagById"/> -->
	</resultMap>

	<resultMap id="commentDetailMap" type="inn.shopping.api.entity.Comment">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="describe_status" property="describeStatus" jdbcType="INTEGER" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="picture" property="picture" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="spec_item_ids" property="specItemIds" jdbcType="VARCHAR" />
		<result column="diff_days" property="diffDays" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, goods_id,user_id, tag_ids, status, anonymous,
		describe_status,service_attitude, service_logistics, 
		content,is_picture,picture, is_append,create_time
	</sql>
	<select id="selectCommentTagById" resultType="inn.shopping.api.entity.CommentTag"
		parameterType="java.lang.String">
		select id,tag,(select count(1) from )count
		from inn_comment_tag C where id in (#{tagIds,jdbcType=VARCHAR})
	</select>
	
	<select id="selectByGoodsId" resultType="inn.shopping.api.entity.Comment" parameterType="java.lang.String">
		select <include refid="Base_Column_List" /> ,
		(select spec_item_ids from inn_order_detail where C.goods_id=goods_id and C.order_id =order_id) specItemIds,
		(select count(1) from inn_commend where C.id=comment_id ) commend,
		(select nickname from tc_user where user_id=C.user_id) as nickname
		from inn_comment C where goods_id = #{goodsId,jdbcType=VARCHAR}
	</select>

	<select id="selectSyntheticalCommentByGoodsId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select goods_id,count(1) as total_count,
		(select count(1) from inn_comment where status='G') good_count,
		concat(round((select count(1) from inn_comment where status='G')/count(1) * 100),'%') good_percent,
		(select count(1) from inn_comment where status='M') middle_count,
		(select count(1) from inn_comment where status='B') bad_count,
		(select count(1) from inn_comment where is_picture='Y') picture_count,
		(select count(1) from inn_comment_append where comment_id=C.id and C.is_append='Y')append_count,
		(select count(1) from inn_reply  where comment_id=C.id) reply_count
		from inn_comment C where goods_id =
		#{goodsId,jdbcType=VARCHAR}
	</select>

	<select id="selectReplyByCommentId" resultType="inn.shopping.api.entity.Reply" parameterType="java.lang.String">
		select R.*,
			(select nickname from tc_user where R.user_id=user_id) nickname,
			(select nickname from tc_user where R.to_user_id=user_id) toNickname
		from inn_reply R where R.comment_id=#{commentId,jdbcType=VARCHAR}
	</select>
	<!-- 判断是否已结点赞 -->
	<select id="selectCommendExists" resultType="inn.shopping.api.entity.Commend" parameterType="inn.shopping.api.entity.Commend">
		select * from inn_commend
		<where>
			comment_id=#{commentId,jdbcType=VARCHAR}
			and user_id=#{userId,jdbcType=VARCHAR}
		</where>
	</select>
	<!-- 为评论点赞 -->
	<insert id="insertCommend" parameterType="inn.shopping.api.entity.Commend">
		insert into inn_commend(id,comment_id,user_id,create_time)
		values(
			#{id,jdbcType=VARCHAR}, #{commentId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},now()
		)
	</insert>
	
	<insert id="insertComment" parameterType="inn.shopping.api.entity.Comment">
		insert into inn_comment(
			id,order_id,goods_id,user_id,status,anonymous,describe_status,service_attitude,
			service_logistics,content,is_picture,is_append,picture,create_time
		) values(
			#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},#{anonymous,jdbcType=VARCHAR},#{describeStatus,jdbcType=VARCHAR},
			#{serviceAttitude,jdbcType=VARCHAR},#{serviceLogistics,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},
			#{isPicture,jdbcType=VARCHAR},#{isAppend,jdbcType=VARCHAR},#{picture,jdbcType=VARCHAR},now()
		)
	</insert>
	
	<!-- 判断是否评论过 -->
	<select id="selectCommentExists" resultType="inn.shopping.api.entity.Comment" parameterType="inn.shopping.api.entity.Comment">
		select * from inn_comment
		<where>
			order_id=#{orderId,jdbcType=VARCHAR}
			and goods_id=#{goodsId,jdbcType=VARCHAR}
			and user_id=#{userId,jdbcType=VARCHAR}
		</where>
	</select>
	<!-- 追加评 -->
	<insert id="appendComment" parameterType="inn.shopping.api.entity.CommentAppend">
		insert inn_comment_append(
			id,comment_id,content,picture,create_time
		)values(
			#{id,jdbcType=VARCHAR}, #{commentId,jdbcType=VARCHAR},
			#{content,jdbcType=VARCHAR},#{picture,jdbcType=VARCHAR},
			now()
		)
	</insert>
	<!-- 变更追平状态 -->
	<update id="updateIsAppend" parameterType="java.lang.String">
		update inn_comment set is_append ='Y' where id=#{commentId,jdbcType=VARCHAR}
	</update>
	
	<!-- 查看评论详情 -->
	<select id="selectCommentDetail" parameterType="java.lang.String" resultMap="commentDetailMap">
		select id,goods_id goodsId,picture, describe_status
			describeStatus,content,create_time createTime,
			(select spec_item_ids from inn_order_detail where C.goods_id=goods_id and C.order_id =order_id) specItemIds,
			datediff(create_time, (select create_time from inn_comment_append where C.id=comment_id)) as diffDays
		from inn_comment C
		where id=#{commentId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectCommentAppend" parameterType="java.lang.String" resultType="inn.shopping.api.entity.CommentAppend">
		select * from inn_comment_append where comment_id=#{commentId,jdbcType=VARCHAR}
	</select>
	
	<insert id="insertReply" parameterType="inn.shopping.api.entity.Reply">
		insert into inn_reply(id,comment_id,user_id,to_user_id,content,create_time) 
		values 
			(#{id,jdbcType=VARCHAR}, #{commentId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},
			#{toUserId,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},now())
	</insert>
</mapper>